{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","anchorEl","mobileMoreAnchorEl","handleProfileMenuOpen","event","_this","setState","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","_this$state","this","classes","props","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","react_default","a","createElement","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","Badge_default","badgeContent","Mail_default","Notifications_default","AccountCircle_default","className","root","AppBar_default","position","min-width","Toolbar_default","Typography_default","variant","noWrap","src","grow","sectionDesktop","ArrowDropDown_default","PersonOutline_default","AirplanemodeActive_default","LocalHotel_default","Train_default","TimeToLeave_default","LocalActivity_default","Component","withStyles","theme","width","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","sectionMobile","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03bb0320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PersonOutline from '@material-ui/icons/PersonOutline';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Airplane from '@material-ui/icons/AirplanemodeActive';\nimport Hotel from '@material-ui/icons/LocalHotel';\nimport Train from '@material-ui/icons/Train';\nimport Mobil from '@material-ui/icons/TimeToLeave';\nimport Tiket from '@material-ui/icons/LocalActivity';\nimport Medun from '@material-ui/icons/ArrowDropDown';\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  \n  \n  sectionDesktop: {\n    display: 'none',\n    width:'30%',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nclass App extends Component {\n  state = {\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n  };\n\n  handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n  };\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n  };\n\n  render() {\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMobileMenuClose}>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem onClick={this.handleMobileMenuClose}>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={this.handleProfileMenuOpen}>\n          <IconButton color=\"inherit\">\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" color=\"white\" min-width=\"100%\">\n          <Toolbar>\n            {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n              <MenuIcon />\n            </IconButton> */}\n            <Typography className={classes.root} variant=\"h6\" color=\"inherit\" noWrap>\n              <img src=\"https://static.tiket.photos/image/upload/v1540373512/home/2018/10/24/8a3ea7a4-882d-4784-b3ac-6ab3436c00535cb9e05af73081ae469edb97e6ba6bf8.svg\"></img>\n            </Typography>\n            {/* <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Searchâ€¦\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n              />\n            </div> */}\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              {/* <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton> */} \n              \n              <Medun/> | \n              Cek Order |\n              {/* <IconButton\n                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n               </IconButton>   */}\n                <PersonOutline/>\n              Login\n            </div>\n            {/* <div className={classes.sectionMobile}>\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </div> */}\n            \n          </Toolbar>\n          <Toolbar>\n            <div className={classes.root}>\n           \n          <Airplane className=\"miring warna\"/>Pesawat &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <Hotel className=\"warna\"/>Hotel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          \n          <Train className=\"warna\"/>Kereta Api&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <Mobil className=\"warna\"/> Sewa Mobil&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <Tiket className=\"miringlagi warna\"/> Entertainment</div>\n            \n          <div className={classes.grow} />\n            <div className={classes.sectionDesktop}> \n              {/* <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton> */} Promo | \n              {/* <IconButton\n                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n               </IconButton>   */}\n                \n               TIX Point\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        {renderMobileMenu}\n      </div>\n    );\n  }\n}\n\n\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}